{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "applicationName": {
      "type": "string",
      "minLength": 1
    },
    "hostingPlanName": {
      "type": "string",
      "minLength": 1
    },
    "skuName": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },
    "administratorLogin": {
      "type": "string"
    },
    "administratorLoginPassword": {
      "type": "securestring"
    },
    "collation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "edition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "maxSizeBytes": {
      "type": "string",
      "defaultValue": "1073741824"
    },
    "requestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    }
  },
  "variables": {
    "SqlServer-Name": "[concat(toLower(parameters('applicationName')), '-sql')]",
    "Backend-Name": "[concat(toLower(parameters('applicationName')), '-api')]",
    "SqlDatabase-Name": "parkmeterdb",
    "Frontend-Name": "[toLower(parameters('applicationName'))]",
    "CosmosDBDefault-Name": "[concat(toLower(parameters('applicationName')), '-ledger')]",
    "Backend-Staging-Name": "staging",
    "Frontend-Staging-Name": "staging"
  },
  "resources": [
    {
      "name": "[variables('SqlServer-Name')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "SqlServer"
      },
      "apiVersion": "2014-04-01-preview",
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]"
      },
      "resources": [
        {
          "name": "[variables('SqlDatabase-Name')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "Database"
          },
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers/', variables('SqlServer-Name'))]"
          ],
          "properties": {
            "edition": "[parameters('edition')]",
            "collation": "[parameters('collation')]",
            "maxSizeBytes": "[parameters('maxSizeBytes')]",
            "requestedServiceObjectiveName": "[parameters('requestedServiceObjectiveName')]"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers/', variables('SqlServer-Name'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "properties": {
        "name": "[parameters('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('Backend-Name')]",
      "type": "Microsoft.Web/sites",
      "kind": "api",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms/', parameters('hostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "empty",
        "displayName": "Backend"
      },
      "properties": {
        "name": "[variables('Backend-Name')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2015-04-01",
          "name": "slotconfignames",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('Backend-Name'))]"
          ],
          "properties": {
            "appSettingNames": [ "connectionstrings","documentdb" ]
          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "[variables('Backend-Staging-Name')]",
          "type": "slots",
          "tags": {
            "displayName": "staging-slot-backend"
          },
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('Backend-Name'))]"
          ],
          "properties": {
          },
          "resources": [
            {
              "apiVersion": "2015-08-01",
              "type": "config",
              "name": "connectionstrings",
              "dependsOn": [
                "[resourceId('Microsoft.Web/Sites/', variables('Backend-Name'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('CosmosDBDefault-Name'))]"
              ],
              "properties": {
                "Default": {
                  "value": "[concat('Data Source=tcp:', reference(resourceId('Microsoft.Sql/servers/', variables('SqlServer-Name'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('SqlDatabase-Name'), ';User Id=', parameters('administratorLogin'), '@', variables('SqlServer-Name'), ';Password=', parameters('administratorLoginPassword'), ';')]",
                  "type": "SQLServer"
                }
              }
            },
            {
              "name": "appsettings",
              "type": "config",
              "apiVersion": "2015-08-01",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('Backend-Name'))]"
              ],
              "tags": {
                "displayName": "documentdb"
              },
              "properties": {
                "DocumentDB:Key": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('CosmosDBDefault-Name')), providers('Microsoft.DocumentDB', 'databaseAccounts').apiVersions[0]).primaryMasterKey]",
                "DocumentDB:Endpoint": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('CosmosDBDefault-Name'))).documentEndpoint]"
              }
            }
          ]
        },
        {
          "apiVersion": "2015-08-01",
          "type": "config",
          "name": "connectionstrings",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites/', variables('Backend-Name'))]",
            "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('CosmosDBDefault-Name'))]"
          ],
          "properties": {
            "Default": {
              "value": "[concat('Data Source=tcp:', reference(resourceId('Microsoft.Sql/servers/', variables('SqlServer-Name'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('SqlDatabase-Name'), ';User Id=', parameters('administratorLogin'), '@', variables('SqlServer-Name'), ';Password=', parameters('administratorLoginPassword'), ';')]",
              "type": "SQLServer"
            }
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('Backend-Name'))]"
          ],
          "tags": {
            "displayName": "documentdb"
          },
          "properties": {
            "DocumentDB:Key": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('CosmosDBDefault-Name')), providers('Microsoft.DocumentDB', 'databaseAccounts').apiVersions[0]).primaryMasterKey]",
            "DocumentDB:Endpoint": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('CosmosDBDefault-Name'))).documentEndpoint]"
          }
        }
      ]
    },
    {
      "name": "[variables('Frontend-Name')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName')))]": "Resource",
        "displayName": "Frontend"
      },
      "properties": {
        "name": "[variables('Frontend-Name')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2015-04-01",
          "name": "slotconfignames",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('Frontend-Name'))]"
          ],
          "properties": {
            "appSettingNames": [ "Parkmeter:ApiUrl" ]
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('Frontend-Name'))]"
          ],
          "tags": {
            "displayName": "ApiUrl"
          },
          "properties": {
            "Parkmeter:ApiUrl": "[concat('https://', variables('Backend-Name'), '.azurewebsites.net')]"
          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "[variables('Frontend-Staging-Name')]",
          "type": "slots",
          "tags": {
            "displayName": "staging-slot-frontend"
          },
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('Frontend-Name'))]"
          ],
          "properties": {
          },
          "resources": [
            {
              "name": "appsettings",
              "type": "config",
              "apiVersion": "2015-08-01",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites/slots', variables('Frontend-Name'),variables('Frontend-Staging-Name'))]"
              ],
              "tags": {
                "displayName": "ApiUrl"
              },
              "properties": {
                "Parkmeter:ApiUrl": "[concat('https://', variables('Backend-Staging-Name'), '.azurewebsites.net')]"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "[variables('CosmosDBDefault-Name')]",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "kind": "GlobalDocumentDB",
      "apiVersion": "2015-04-08",
      "location": "[resourceGroup().location]",
      "tags": {
        "defaultExperience": "DocumentDB",
        "displayName": "Ledger"
      },
      "scale": null,
      "properties": {
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "name": "[variables('CosmosDBDefault-Name')]"
      },
      "dependsOn": []
    }
  ]
}